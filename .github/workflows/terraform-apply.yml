name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run apply for'
        required: true
        default: 'dev'

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: environments/${{ github.event.inputs.environment }}

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Auto-Increment and Tag Release
        if: github.ref == 'refs/heads/main'
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          VERSION_TAG=$(echo $LATEST_TAG | awk -F. '{printf("v%d.%d.%d", $1 == "v" ? substr($1, 2) : $1, $2, $3 + 1)}')
          echo "New tag: $VERSION_TAG"
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git tag $VERSION_TAG
          git push origin $VERSION_TAG

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        run: |
          gh release create "$VERSION_TAG" --generate-notes --title "Release $VERSION_TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
